T = int(input())

for tc in range(1, T + 1):
    N = int(input())  # 원의 반지름
    dot_cnt = 0

    # 원점(0,0)에서 (N, N)범위 안에 있는 격자점(정수)의 수

    for x in range(-N, N + 1):  # 처음에 범위 설정을 (N, N)까지로만 생각하였음.
        # 그러나 실제로는 x와 y는 -N부터 N까지가 정상 범위. 예) 원이 3일 때 (-3,-3), (-3,0), (0,-3) 등도 포함되어야 함.
        for y in range(-N, N + 1):
            if x ** 2 + y ** 2 <= N ** 2:  # 원의 내부 점을 고려하지 않음: 실제로 원 안의 격자점을 세려면 x^2+y^2<=N^2 조건을 반드시 포함해야 함. 처음 코드는 조건 없이 모든 점을 셈.
                dot = ([x], [y])  # 불필요한 변수와 데이터 구조: dot = ([x], [y])로 쓸 필요 없음. 단순히 x, y를 바로 검사하면 됨.
                # 사실상 dot 변수도 답안만 구하는 게 목적이라면 지정할 필요 없었음.
                dot_cnt += 1

    print(f'#{tc} {dot_cnt}')

#### 아래가 처음 혼자 작성했던 코드
#: 이 코드는 원점(0,0)을 중심으로 한 원 반지름 N의 범위 내에서 정수 좌표(격자점)들을 세려고 시도하지만, 실제로는 단순히 (0,0)~(N,N) 직사각형에 포함된 모든 점을 세는 코드였음.

# T = int(input())
# for tc in range(1, T + 1):
# N = int(input())   # 원의 반지름

# count = 1   # 원점(0,0)을 포함시켜 카운팅 해야 하니까 1로 시작
# dot_cnt = 0

# 원점(0,0)에서 (N, N)범위 안에 있는 격자점(정수)의 수

# for x in range(N + 1):
# for y in range(N + 1):
# dot = ([x],[y])
# dot_cnt += 1


# print(dot_cnt)