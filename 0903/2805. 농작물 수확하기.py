T = int(input())

for tc in range(1, T + 1):
    N = int(input())
    # N * N 크기의 농장에서 기르는 농작물의 가치를 알 수 있는 배열 좌표
    v_arr = [list(map(int, input())) for _ in range(N)]

    profit = 0   # 문제에서 원하는 값 : 수익

    # 여기서부터 막힘
    # 댓글과 강사님 코드를 참고 : 농장 크기의 절반을 활용해야 한다는 생각은 전혀 못했다...

    d = N // 2  # 거리 d라는 녀석을 생성, 이 거리는 농장 전체 크기의 절반(N // 2)
    # 농장의 정중앙과 거리 차이가 d 이하인 곳만 수확할 수 있다...
    # => 농장 크기에 딱 맞는 마름모꼴 현태로만 수확이 가능하기 때문
    # 농장 정 가운데의 좌표를 만들어준다.
    center = (d, d)

    # 모든 위치(아래의 for 문들로 탐색할 r과 c)에서 정중앙까지 가로로 이동한 횟수 : x
    # 모든 위치(아래의 for 문들로 탐색할 r과 c)에서 정중앙까지 세로로 이동한 횟수 : y

    # x + y <= d 이하인 곳들의 합을 구한다.
    # (처음엔 왜 x, y 각각 d 이하가 아니라 x + y가 d 이하여야 하지? 생각했는데, 이것도 마름모꼴 형태로 수확하기 때문이었다.)

    # 가로 이동 횟수 => (r,c) 와 (d,d) 에서 c, d의 차이의 절댓값
    # 세로 이동 횟수 => (r,c) 와 (d,d) 에서 r, d의 차이의 절댓값

    for r in range(N):
        for c in range(N):
            if abs(r-d) + abs(c - d) <= d:  # 좌표상 정중앙에서 아래나 좌측으로 이동하게 되면 음수가 되니, 절댓값(abs) 씌워주기!
                profit += v_arr[r][c]   # 농장의 [r][c]를 돌아다니며 해당 좌표의 수익을 profit 변수에 합산

    print(f'{tc} {profit}') # 아 테스트 케이스 # 을 빠트리고 출력했다... 실수